{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_output",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "dataset_output_3",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataset_adls_1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          sort as short,",
				"          UserId as integer,",
				"          ProjectAddress as string,",
				"          OrganizationName as string,",
				"          OrganizationId as integer,",
				"          JobTitle as string,",
				"          Mobile as double,",
				"          ProjectFax as long,",
				"          ProjectPhone as long,",
				"          SearchResultType as string,",
				"          TradingName as string,",
				"          UserName as string,",
				"          Email as string,",
				"          primaryIdentifier as string,",
				"          naturalKeyLabel as integer,",
				"          CacheDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          sort as short,",
				"          UserId as integer,",
				"          ProjectAddress as string,",
				"          Organization as string,",
				"          OrganizationId as string,",
				"          JobTitle as string,",
				"          Mobile as string,",
				"          ProjectFax as string,",
				"          ProjectPhone as string,",
				"          Type as string,",
				"          TradingName as string,",
				"          UserName as string,",
				"          EmailAddress as string,",
				"          primaryIdentifier as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     modifiedAfter: (toTimestamp(1661904000718L))) ~> source2",
				"source1, source2 join(source1@UserId == source2@UserId,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as string,",
				"          Name as string,",
				"          OrderYear as string,",
				"          OrderQuantity as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}